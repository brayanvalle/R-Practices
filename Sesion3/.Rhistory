clear()
clear
clear <- function() cat(c("\033[2J","\033[0;0H"))
clear()
shell("cls")
View(clear)
View(clear)
5 + 6
data
data <- c(12 , 3 , 4 , 5)
clear()
vec2 = c(2:4)
vec2
vec1(5)
seq(1,6)
seq(1,6,by=0.05)
seq(1,6,by=0.05)
seq(1,6)
lenght(vec1)
length(vec1)
mat0 = matrix(0,4,4)
ciudades <- c("Medellín" , "Bogotá" , "Cali")
poblacion <-c (2464000 , 8081000, 2401000)
temperatura_prom <-c(22,14,28)
ciudades <- c("Medellín" , "Bogotá" , "Cali")
poblacion <-c (2464000 , 8081000, 2401000)
temperatura_prom <-c(22,14,28)
data.frame()
data_frame <- data.frame(ciudades,poblacion, temperatura_prom)
data_frame
ciudades <- c("Medellín" , "Bogotá" , "Cali")
poblacion <-c (2464000 , 8081000, 2401000)
temperatura_prom <-c(22,14,28)
dataframe_ciudades <- data.frame(ciudades,poblacion, temperatura_prom)
dataframe_ciudades
dataframe_ciudades["poblacion"]
datagrame_ciudades$poblacion
ciudades <- c("Medellín" , "Bogotá" , "Cali")
poblacion <-c (2464000 , 8081000, 2401000)
temperatura_prom <-c(22,14,28)
dataframe_ciudades <- data.frame(ciudades,poblacion, temperatura_prom)
dataframe_ciudades
dataframe_ciudades["poblacion"]
dataframe_ciudades$poblacion
data()
data(mtcars)
data()
(mtcars)
mean(poblacion)
data()
data(mtcars)
data()
data(faithful)
faithful
data(mtcars)
mtcars
head(mtcars)
nrow(mtcars)
colMeans(mtcars)
rowMeans(mtcars)
mean(mtcars$mpg)
x = c(1,2,NA)
is.na(x)
x <-[!is.na(x)]
x <-x[!is.na(x)]
x
max(x)
x = c(1,2,NA)
max(x)
max(x,na.rm="TRUE")
x = 0/0
x
x <-c(1,2,3)
mean(x)
median(x)
rnorm(x)
cor(x)
cor()
rmnom()
rnorm()
rnorm(12)
min(x)
max(x)
which.max(x)
which.min(x)
summary(x)
summary(mtcars)
x <-c(1,2,3,20000)
mean(x)
caculate(2,3)
calculate = function(x, y){
return (x*y + x - 2*y)
}
caculate(2,3)
calculate = function(x, y){
return (x*y + x - 2*y)
}
x = calculate(2,3)
x
hist(x)
hist(mtcars)
n<-10
n
n=10
n
n<-10
pares<-c()
impares<-c()
for(i in 1:n){
if(i %% 2 == 0)
pares<-c(pares,i)
else
impares<-c(impares,i)
}
pares
impares
ab<-c(1,2,3,6,7,8)
barplo(ab)
barplot(ab)
boxplot(ab)
contour(ab)
piechart(ab)
type("p")
x = rnorm(100)
x
y = rnorm(100)
plot(x,y)
plot(x,y,type="p",col="red")
plot(mtcars$mpg, mtcars$disp,col = "green" , main="Gráfico EPM", xlab = "Millas por galón", ylab="Desplazamiento")
hist(x<-rnorm(100))
plot(x,y,xlab ="Diez números al azar", ylab="Another 10 numbers")
plot(x,y,xlab ="Diez números al azar", ylab="Another 10 numbers" ,
pch=22,col="red",bg="yellow", main="Grafico personalizado")
plot(x,y,xlab ="Diez números al azar", ylab="Another 10 numbers" ,
pch=21,col="red",bg="yellow", main="Grafico personalizado")
library()
library(help ="foreign")
install.packages("foreign")
library(help ="foreign")
library("foreign")
# Cargar datos de archivos .csv (separados por comas)
mis_datos_csv = read.csv("data/Criminalidad.csv", header = TRUE, sep = ",")
# Ver el dataset
mis_datos_csv
install.packages("memisc")
# Cargar datos de archivos .sav (SPSS Statistics)
mis_datos_spss = read.spss("data/Empleados.sav", to.data.frame=TRUE)
# Cargar datos de archivos .csv (separados por comas)
mis_datos_csv = read.csv("data/Criminalidad.csv", header = TRUE, sep = ",")
#Cambiar el directorio de trabajo
setwd("E:/Courses/R/R Practices/Sesion3/")
# Cargar datos de archivos .csv (separados por comas)
mis_datos_csv = read.csv("data/Criminalidad.csv", header = TRUE, sep = ",")
# Ver el dataset
mis_datos_csv
install.packages("memisc")
# Cargar datos de archivos .sav (SPSS Statistics)
mis_datos_spss = read.spss("data/Empleados.sav", to.data.frame=TRUE)
# See the dataset
mis_datos_spss
#Instalar un paquete
install.packages("foreign")
install.packages("foreign")
#Cargar un paquete instalado. Después de esto, se pueden usar las funciones disponibles.
library("foreign")
# Cargar datos de archivos .csv (separados por comas)
mis_datos_csv = read.csv("data/Criminalidad.csv", header = TRUE, sep = ",")
# Ver el dataset
mis_datos_csv
install.packages("memisc")
# Cargar datos de archivos .sav (SPSS Statistics)
mis_datos_spss = read.spss("data/Empleados.sav", to.data.frame=TRUE)
# See the dataset
mis_datos_spss
v<-c(1:5)
v
x1<-v + 2
x1
v2<-v + v1
v1<-c(6:10)
v2<-v + v1
v2
x1<-rnorm(1000)
x2<-rnorm(1000)
x3<-rnorm(1000)
